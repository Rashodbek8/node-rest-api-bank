generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url = env("DATABASE_URL")
}

enum TransactionStatus {
pending
confirmed
failed
}

enum WebhookStatus {
delivered
retrying
failed
}

model User {
id Int @id @default(autoincrement())
name String
email String @unique
password String
role String @default("client")
accounts Account[]
}

model Account {
id Int @id @default(autoincrement())
userId Int
accountNumber String @unique
balance Float
user User @relation(fields: [userId], references: [id])

outgoingTransactions Transaction[] @relation("FromAccount")
incomingTransactions Transaction[] @relation("ToAccount")
}

model Transaction {
id Int @id @default(autoincrement())
fromAccountId Int
toAccountId Int
amount Float
status TransactionStatus
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

fromAccount Account @relation("FromAccount", fields: [fromAccountId], references: [id])
toAccount Account @relation("ToAccount", fields: [toAccountId], references: [id])
webhookLogs WebhookLog[]
}

model WebhookLog {
id Int @id @default(autoincrement())
transactionId Int
status WebhookStatus
payload Json
errorMessage String?
createdAt DateTime @default(now())

transaction Transaction @relation(fields: [transactionId], references: [id])
}